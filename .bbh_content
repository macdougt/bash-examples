# Not ideal but it will append the last command to a common history file
# this will leave the last commands in each terminal unadded
# TODO maybe add cwd or last unique path ending, maybe machine too if many machines will
# contribute

BIG_HISTORY="${HOME}/.bash_big_history"
export BBH=$BIG_HISTORY

get_last() {
    #echo -n "[$$ $(whoami) $(hostname) $(pwd) $(date +'%s') \"$(date)\" $(tty)] "
    echo -n "[$$ $(whoami) $(pwd) $(date +'%s') \"$(date)\" $(tty)] "
    fc -ln "$1" "$1" | sed '1s/^[[:space:]]*//'
}

# This will run before any command is executed.
function PreCommand() {
  if [ -z "$AT_PROMPT" ]; then
    return
  fi
  unset AT_PROMPT

  RRR=$BASH_COMMAND
  export RRR
  echo -n "[$$ $(whoami) $(pwd) $(date +'%s') \"$(date)\" $(tty)" >> $BIG_HISTORY
  #echo "Running PreCommand"
}
trap "PreCommand" DEBUG

# This will run after the execution of the previous full command line.  We don't
# want it PostCommand to execute when first starting a bash session (i.e., at
# the first prompt).
FIRST_PROMPT=1
function PostCommand() {
  RET_CODE=$?
  echo " ${RET_CODE}] $RRR" >> $BIG_HISTORY
  
  AT_PROMPT=1

  if [ -n "$FIRST_PROMPT" ]; then
    unset FIRST_PROMPT
    return
  fi

  # Consider next command
  >&2 printf '\e[38;2;90;90;90m'
  >&2 echo -n "Seen $RRR: "
  >&2 grep -c "$RRR" $BIG_HISTORY
  >&2 printf '\e[0m'

  #echo "Running PostCommand"
}
PROMPT_COMMAND="PostCommand"

# Tracking - bbh
function bbh_function() {
   if [ $# -eq 0 ]
     then
     list $BIG_HISTORY | bbh_unique ;
   else
     list $BIG_HISTORY | grep $* | bbh_unique ;
   fi
}
alias bbh=bbh_function

function bbr_function() {
   command_to_run=$(bbh_function | grep ^"$1 " | cut -d' ' -f2-)
   echo "$command_to_run"
   $command_to_run
}
alias bbr=bbr_function
alias big='vi $BIG_HISTORY'





