# Not ideal but it will append the last command to a common history file
# this will leave the last commands in each terminal unadded
# TODO maybe add cwd or last unique path ending, maybe machine too if many machines will
# contribute

BIG_HISTORY="${HOME}/.bash_big_history"
export BBH=$BIG_HISTORY

# This will run before any command is executed.
function PreCommand() {
  if [ -z "$AT_PROMPT" ]; then
    return
  fi
  unset AT_PROMPT

  CURRENT_COMMAND=$BASH_COMMAND
  export CURRENT_COMMAND
  #echo "--$CURRENT_COMMAND--"

  # Do not process PostCommand
  if [ "$CURRENT_COMMAND" != "PostCommand" ]; then
    # pid, user, pwd, epoch, date readable, tty
    echo "" >> $BIG_HISTORY
    echo -n "[pre $$ $(whoami) $(pwd) $(date +'%s') \"$(date)\" $(tty)] $CURRENT_COMMAND" >> $BIG_HISTORY
    #printf "\n[%d %s %s %d %s %s] %s" $$ $(whoami) $(pwd) $(date +'%s') '$(date)' $(tty) $CURRENT_COMMAND >> $BIG_HISTORY
  fi
}

trap "PreCommand" DEBUG

# This will run after the execution of the previous full command line.  We don't
# want it PostCommand to execute when first starting a bash session (i.e., at
# the first prompt).
FIRST_PROMPT=1
function PostCommand() {
  RET_CODE=$?
  #echo "-+$CURRENT_COMMAND+-"
  if [ "$CURRENT_COMMAND" != "PostCommand" ]; then
    echo "" >> $BIG_HISTORY
    echo "[post $CURRENT_COMMAND $$ $(date +'%s') $(tty) ${RET_CODE}]" >> $BIG_HISTORY

    if [ -n "$FIRST_PROMPT" ]; then
      unset FIRST_PROMPT
      return
    fi

    # Consider next command
    >&2 printf '\e[38;2;90;90;90m'
    >&2 echo -n "Seen $CURRENT_COMMAND: "
    >&2 grep -c "pre.*$CURRENT_COMMAND" $BIG_HISTORY
    >&2 printf '\e[0m'
  fi
  AT_PROMPT=1
}

PROMPT_COMMAND="PostCommand"

# Tracking - bbh
function bbh_function() {
   if [ $# -eq 0 ]
     then
     list $BIG_HISTORY | bbh_unique ;
   else
     list $BIG_HISTORY | grep $* | bbh_unique ;
   fi
}
alias bbh=bbh_function

function bbr_function() {
   command_to_run=$(bbh_function | grep ^"$1 " | cut -d' ' -f2-)
   echo "$command_to_run"
   $command_to_run
}
alias bbr=bbr_function
alias big='vi $BIG_HISTORY'
alias bbh_here='perl -e '"'"'$d=`pwd`;chomp($d);while(<>){if (/$d\s/){print $_}}'"'"' $BBH'
